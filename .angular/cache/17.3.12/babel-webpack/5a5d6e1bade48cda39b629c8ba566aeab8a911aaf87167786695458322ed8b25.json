{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ConfirmDialogComponent } from '@app/shared/components/confirm-dialog/confirm-dialog.component';\nlet ProductionDetailsComponent = class ProductionDetailsComponent {\n  constructor(route, router, productionService, scriptService, productionUserService, dialog, snackBar) {\n    this.route = route;\n    this.router = router;\n    this.productionService = productionService;\n    this.scriptService = scriptService;\n    this.productionUserService = productionUserService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.production = null;\n    this.scripts = [];\n    this.productionUsers = [];\n    this.productionId = 0;\n    this.loading = true;\n    this.error = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.productionId = +id;\n        this.loadProductionData(+id);\n      } else {\n        this.error = 'No production ID provided';\n        this.loading = false;\n      }\n    });\n  }\n  loadProductionData(id) {\n    this.loading = true;\n    this.productionService.getProduction(id).subscribe({\n      next: production => {\n        this.production = production;\n        this.loadRelatedData(id);\n      },\n      error: error => {\n        this.error = error.message || 'Failed to load production data';\n        this.loading = false;\n      }\n    });\n  }\n  loadRelatedData(productionId) {\n    // Load scripts\n    this.scriptService.getScriptsByProduction(productionId).subscribe({\n      next: scripts => {\n        this.scripts = scripts;\n      },\n      error: error => {\n        console.error('Error loading scripts:', error);\n      }\n    });\n    // Load production users\n    this.productionUserService.getProductionUsersByProduction(productionId).subscribe({\n      next: users => {\n        this.productionUsers = users;\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error loading production users:', error);\n        this.loading = false;\n      }\n    });\n  }\n  editProduction() {\n    if (this.production) {\n      this.router.navigate(['/productions', this.production.id, 'edit']);\n    }\n  }\n  deleteProduction() {\n    if (!this.production) return;\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '400px',\n      data: {\n        title: 'Delete Production',\n        message: `Are you sure you want to delete \"${this.production.title}\"? This action cannot be undone and will remove all associated data.`\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.productionService.deleteProduction(this.production.id).subscribe({\n          next: () => {\n            this.snackBar.open('Production deleted successfully', 'Close', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/productions']);\n          },\n          error: error => {\n            this.snackBar.open(error.message || 'Failed to delete production', 'Close', {\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        });\n      }\n    });\n  }\n  createNewScript() {\n    // Navigate to script creation page with production ID\n    this.router.navigate(['/scripts/new'], {\n      queryParams: {\n        productionId: this.productionId\n      }\n    });\n  }\n  viewScript(scriptId) {\n    this.router.navigate(['/scripts', scriptId]);\n  }\n  addUser() {\n    // Navigate to add user page with production ID\n    this.router.navigate(['/productions', this.productionId, 'users', 'new']);\n  }\n  backToList() {\n    this.router.navigate(['/productions']);\n  }\n};\nProductionDetailsComponent = __decorate([Component({\n  selector: 'app-production-details',\n  templateUrl: './production-details.component.html',\n  styleUrls: ['./production-details.component.scss']\n})], ProductionDetailsComponent);\nexport { ProductionDetailsComponent };","map":{"version":3,"names":["Component","ConfirmDialogComponent","ProductionDetailsComponent","constructor","route","router","productionService","scriptService","productionUserService","dialog","snackBar","production","scripts","productionUsers","productionId","loading","error","ngOnInit","paramMap","subscribe","params","id","get","loadProductionData","getProduction","next","loadRelatedData","message","getScriptsByProduction","console","getProductionUsersByProduction","users","editProduction","navigate","deleteProduction","dialogRef","open","width","data","title","afterClosed","result","duration","panelClass","createNewScript","queryParams","viewScript","scriptId","addUser","backToList","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/owenbaldwin/code/owenbaldwin2/claude-lvfx-fe/src/app/features/productions/production-details/production-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ProductionService } from '@app/core/services/production.service';\nimport { ScriptService } from '@app/core/services/script.service';\nimport { ProductionUserService } from '@app/core/services/production-user.service';\nimport { Production, Script, ProductionUser } from '@app/shared/models';\nimport { ConfirmDialogComponent } from '@app/shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-production-details',\n  templateUrl: './production-details.component.html',\n  styleUrls: ['./production-details.component.scss']\n})\nexport class ProductionDetailsComponent implements OnInit {\n  production: Production | null = null;\n  scripts: Script[] = [];\n  productionUsers: ProductionUser[] = [];\n  productionId: number = 0;\n  loading = true;\n  error = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productionService: ProductionService,\n    private scriptService: ScriptService,\n    private productionUserService: ProductionUserService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.productionId = +id;\n        this.loadProductionData(+id);\n      } else {\n        this.error = 'No production ID provided';\n        this.loading = false;\n      }\n    });\n  }\n\n  loadProductionData(id: number): void {\n    this.loading = true;\n    \n    this.productionService.getProduction(id).subscribe({\n      next: (production) => {\n        this.production = production;\n        this.loadRelatedData(id);\n      },\n      error: (error) => {\n        this.error = error.message || 'Failed to load production data';\n        this.loading = false;\n      }\n    });\n  }\n\n  loadRelatedData(productionId: number): void {\n    // Load scripts\n    this.scriptService.getScriptsByProduction(productionId).subscribe({\n      next: (scripts) => {\n        this.scripts = scripts;\n      },\n      error: (error) => {\n        console.error('Error loading scripts:', error);\n      }\n    });\n\n    // Load production users\n    this.productionUserService.getProductionUsersByProduction(productionId).subscribe({\n      next: (users) => {\n        this.productionUsers = users;\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error loading production users:', error);\n        this.loading = false;\n      }\n    });\n  }\n\n  editProduction(): void {\n    if (this.production) {\n      this.router.navigate(['/productions', this.production.id, 'edit']);\n    }\n  }\n\n  deleteProduction(): void {\n    if (!this.production) return;\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '400px',\n      data: {\n        title: 'Delete Production',\n        message: `Are you sure you want to delete \"${this.production.title}\"? This action cannot be undone and will remove all associated data.`\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.productionService.deleteProduction(this.production!.id).subscribe({\n          next: () => {\n            this.snackBar.open('Production deleted successfully', 'Close', {\n              duration: 3000,\n              panelClass: ['success-snackbar']\n            });\n            this.router.navigate(['/productions']);\n          },\n          error: (error) => {\n            this.snackBar.open(error.message || 'Failed to delete production', 'Close', {\n              duration: 5000,\n              panelClass: ['error-snackbar']\n            });\n          }\n        });\n      }\n    });\n  }\n\n  createNewScript(): void {\n    // Navigate to script creation page with production ID\n    this.router.navigate(['/scripts/new'], { queryParams: { productionId: this.productionId } });\n  }\n\n  viewScript(scriptId: number): void {\n    this.router.navigate(['/scripts', scriptId]);\n  }\n\n  addUser(): void {\n    // Navigate to add user page with production ID\n    this.router.navigate(['/productions', this.productionId, 'users', 'new']);\n  }\n\n  backToList(): void {\n    this.router.navigate(['/productions']);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}